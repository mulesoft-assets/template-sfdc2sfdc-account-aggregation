<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" 
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<munit:config name="test-suite.xml" doc:name="MUnit configuration"/>
	<configuration-properties doc:name="Configuration properties" doc:id="d34b6ca0-3410-496a-ac22-3403f0aa4982" file="mule.test.properties" />
	<munit:before-test name="test-suiteBefore_Test" description="Before tests actions" doc:id="7f8facb1-95ae-4456-9448-faf3a3a89dc9" >
		<ee:transform doc:name="Prepare testing data for instance A" doc:id="7c253cc1-4a09-4e71-a9c5-74e5dbbf5848">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
[{
	Description: "test description1",
	Name: "TestRecord1",
	Industry: "Education",
	NumberOfEmployees: 15001
},
{
	Description: "test description2",
	Name: "TestRecord2",
	Industry: "Energy",
	NumberOfEmployees: 100
}
]

]]></ee:set-payload>
				</ee:message>
			</ee:transform>
		<salesforce:create type="Account" doc:name="Create Accounts in instance A" doc:id="d62c8e61-71a7-43f3-8aa0-b4b5cb5359a4" config-ref="Salesforce_Sfdc_A_config"/>
		<ee:transform doc:name="Store Ids from A and prepare testing data for instance B" doc:id="583b429a-7add-47cb-b291-6cf82ee271cb">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
[{
	Description: "test description1",
	Name: "TestRecord1",
	Industry: "Education",
	NumberOfEmployees: 1201
},
{
	Description: "test description3",
	Name: "TestRecord3",
	Industry: "Energy",
	NumberOfEmployees: 10000
}
]]]></ee:set-payload>
				</ee:message>
			<ee:variables >
				<ee:set-variable variableName="IdsA" ><![CDATA[%dw 2.0
output application/java
---
payload.items map ($.id)]]></ee:set-variable>
			</ee:variables>
			</ee:transform>
        <salesforce:create type="Account" doc:name="Create Accounts in instance B" doc:id="7d3d2b67-2b6a-41db-b759-5a912281455d" config-ref="Salesforce_Sfdc_B_config"/>
		<set-variable value="#[payload.items map ($.id)]" doc:name="Store Ids from B" doc:id="c893cd3f-1bb7-4e51-aa87-bfd9eaedf345" variableName="IdsB"/>
        <munit-tools:mock-when doc:name="Mock email processor to avoid sending email" doc:id="17ab3357-3f08-4456-9f14-c41c281e06f1" processor="email:send">
				<munit-tools:then-return />
			</munit-tools:mock-when>
	</munit:before-test>
	<munit:test name="test-suite-businesslogicFlowTest" description="Test" doc:id="4ffcda90-21bf-4cd4-9460-09cf6ca578e5" >
		<munit:execution >
			<flow-ref doc:name="businesslogicFlow" doc:id="3e0601a1-1b47-4974-83b0-8d30726559dd" name="businesslogicFlow"/>
			<ee:transform doc:name="Filtering test records" doc:id="903370f0-c852-4d41-a25e-46f41bbe649b">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload filter ($.Name == "TestRecord1" or $.Name == "TestRecord2" or $.Name == "TestRecord3")]]></ee:set-payload>
				</ee:message>
			</ee:transform>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert number of records" doc:id="f202c84b-b80c-42bf-b2bb-17b889c1bc50" expression="#[sizeOf(payload)]" is="#[MunitTools::equalTo(3)]" message="Assert number of records"/>
			<munit-tools:assert-that doc:name="Assert that name in first record is correct" doc:id="df64f6a4-1444-43d1-9b31-069dccfb9c04" is="#[MunitTools::equalTo('TestRecord2')]" expression="#[payload[0].Name]" message="Assert that name in first record is correct"/>
			<munit-tools:assert-that doc:name="Assert that first record exists in instance A" doc:id="f3881a26-b7ed-4473-a4a2-a465aa5f544d" expression="#[payload[0].IDInA]" is="#[MunitTools::not(MunitTools::isEmptyOrNullString())]" message="Assert that first record exists in instance A"/>
			<munit-tools:assert-that doc:name="Assert that first record does not exist in instance B" doc:id="f1900f46-2e69-4f50-b6db-9c240463ba59" expression="#[payload[0].IDInB]" is="#[MunitTools::isEmptyOrNullString()]" message="Assert that first record does not exist in instance B"/>
			<munit-tools:assert-that doc:name="Assert that name in second record is correct" doc:id="df64f6a4-1444-43d1-9b31-069dccfb9c04" is="#[MunitTools::equalTo('TestRecord3')]" expression="#[payload[1].Name]" message="Assert that name in second record is correct"/>
			<munit-tools:assert-that doc:name="Assert that secord record does not exist in instance A" doc:id="de0e4d31-5f43-4ddb-bcc1-bd107f2e4a26" expression="#[payload[1].IDInA]" is="#[MunitTools::isEmptyOrNullString()]" message="Assert that secord record does not exist in instance A"/>
			<munit-tools:assert-that doc:name="Assert that secord record exists in instance B" doc:id="d518abcd-8c6a-4cc7-95ff-73d57797a003" is="#[MunitTools::not(MunitTools::isEmptyOrNullString())]" expression="#[payload[1].IDInB]" message="Assert that secord record exists in instance B"/>
			<munit-tools:assert-that doc:name="Assert that name in third record is correct" doc:id="df64f6a4-1444-43d1-9b31-069dccfb9c04" is="#[MunitTools::equalTo('TestRecord1')]" expression="#[payload[2].Name]" message="Assert that name in third record is correct"/>
			<munit-tools:assert-that doc:name="Assert that third record exists in instance A" doc:id="39ff4804-dc22-4263-85af-ec0396a50e81" expression="#[payload[2].IDInA]" is="#[MunitTools::not(MunitTools::isEmptyOrNullString())]" message="Assert that third record exists in instance A"/>
			<munit-tools:assert-that doc:name="Assert that third record exists in instance B" doc:id="163b284b-1a69-4ee5-b71c-da0baf5d73e5" expression="#[payload[2].IDInB]" is="#[MunitTools::not(MunitTools::isEmptyOrNullString())]" message="Assert that third record exists in instance B"/>
		</munit:validation>
	</munit:test>
	
	<munit:after-test name="test-suiteAfter_Test" description="After tests actions" doc:id="5b85bb9e-67e6-47f7-8f71-53a39f147fc8" >
		<salesforce:delete doc:name="Delete source Accounts in instance A" doc:id="788956ca-8ada-49c2-a3f7-7eb367e735b4" config-ref="Salesforce_Sfdc_A_config">
				<salesforce:ids><![CDATA[#[vars.IdsA]]]></salesforce:ids>
			</salesforce:delete>
		<salesforce:delete doc:name="Delete source Accounts in instance B" doc:id="c7151831-572a-4986-927c-733614bcbc9e" config-ref="Salesforce_Sfdc_B_config">
			<salesforce:ids ><![CDATA[#[vars.IdsB]]]></salesforce:ids>
		</salesforce:delete>
	</munit:after-test>
</mule>
